#include <iostream>
#include <cstdio>
#include <fstream>
#include <cstdlib>
#include <cstring>
#include "Pass2.h"

using namespace std;

class Passenger *LoadPass (char *file2, class Passenger *vad, int *hush)
	{
	string a;
	char s[100];
	int i, m=0; 

	ifstream fin;
	fin.open(file2, ios::in);
	if (!fin)
		{
		cout<<"Невозможно открыть файл"<<endl;
		return NULL;
		}
	while (getline(fin, a))
		m++;
	fin.close ();
	fin.open(file2, ios::in);
	if (m!=0)
		{
		vad=(class Passenger*)malloc(sizeof(class Passenger)*m);
		for (i=0; i<m; i++)
			fin>>vad[i].surname>>vad[i].name>>vad[i].secname>>vad[i].pasport>>vad[i].numTicket>>vad[i].numTrip;
		}
	else
		cout<<"Пассажиров нет"<<endl;
	fin.close();
	*hush=m;
	if(vad==NULL)
		cout<<"Данных нет"<<endl;
	return vad;
	}

class Voyage *LoadVo (char *file1, class Voyage *ghul, int *hush)
	{
	string b;
	char s[100];
	int i, m=0;
	
	ifstream in;
	in.open(file1, ios::in);
	if (!in)
		{
		cout<<"Невозможно открыть файл"<<endl;
		return NULL;
		}
	while (getline(in, b))
		m++;
	in.close();
	in.open(file1, ios::in);
	if (m!=0)
		{
		ghul=(class Voyage*)malloc(sizeof(class Voyage)*m);
		for (i=0; i<m; i++)
			in>>ghul[i].numVoyage>>ghul[i].way>>ghul[i].date>>ghul[i].sit>>ghul[i].freeSit;
		}
	else
		cout<<"Рейсов нет"<<endl;
	in.close();
	*hush=m;
	if(ghul==NULL)
		cout<<"Данных нет"<<endl;
	return ghul;
	}
   
int Passenger::inputPass(char *file1 ,char *file2, class Voyage *ghul, int l)
  {
	int i, h, o=0;
  
	cout<<"Добавление пассажира\n\nВведите Ф.И.О. пассажира: ";
	cin>>surname>>name>>secname;
	cout<<"Введите номер паспорта пассажира: ";
	cin>>pasport;
	cout<<"Введите номер билета пассажира: ";
	cin>>numTicket;
	cout<<"Введите номер рейса пассажира: ";
	cin>>numTrip;
	for(i=0; i<l; i++)
		if (strcmp (numTrip, ghul[i].numVoyage) == 0)
			{
			if(ghul[i].freeSit==0)
				{
				cout<<"Невозможно добавить пассажира"<<endl;
				return 1;
	  		}
			else
				{
				o++;
				h=ghul[i].freeSit;
				h=h-1; 
				ghul[i].freeSit=h;
				cout<<ghul[i].freeSit<<endl;
				SaveVo(file1, ghul, l);
				}
			}
		if (o==0)
			{
			cout<<"Такого рейса не существует"<<endl;
			return 1;
			}

	ofstream out(file2, ios::app);
	out<<surname<<" "<<name<<" "<<secname<<" "<<pasport<<" "<<numTicket<<" "<<numTrip<<endl;
	out.close();
	}
  
int Voyage::inputVo(char *file1)
	{
	cout<<"Введите номер рейса: ";
	cin>>numVoyage;
	cout<<"Введите направление рейса: ";
	cin>>way;
	cout<<"Введите дату вылета рейса: ";
	cin>>date;
	cout<<"Введите количество мест на рейсе: ";
	cin>>sit;
	cout<<"Введите количество свободных мест на рейсе: ";
	cin>>freeSit;

	if(sit<freeSit)
		{
		cout<<"Некорректные данные"<<endl;
		return 1;
		}
	if(sit<=0)
		{
		cout<<"Некорректные данные"<<endl;
		return 1;
		}
	if(freeSit<0)
		{
		cout<<"Некорректные данные"<<endl;
		return 1;
		}
	ofstream out(file1, ios::app);
	out<<numVoyage<<" "<<way<<" "<<date<<" "<<sit<<" "<<freeSit<<endl;
	out.close();
	}
  
void Passenger::ShowPass(class Passenger *vad, int k)
	{
	int i, p=0;
	cout<<"#################################"<<endl;
	cout<<"Пассажиры: "<<endl;
	if (vad!=NULL)
		for (i=0; i<k; i++)
			{
			p++;
			cout<<i+1<<") "<<vad[i].surname<<" "<<vad[i].name<<" "<<vad[i].secname<<" "<<vad[i].pasport<<" "<<vad[i].numTicket<<" "<<vad[i].numTrip<<endl;
			}
	else
		cout<<"Пассажиров нет"<<endl;
	}        

void Voyage::ShowVo(class Voyage *ghul, int l)
	{
	int i, p=0;
	cout<<"Рейсы: "<<endl;
	if (ghul!=NULL)
		for (i=0; i<l; i++)
			{
			p++;
			cout<<i+1<<") "<<ghul[i].numVoyage<<" "<<ghul[i].way<<" "<<ghul[i].date<<" "<<ghul[i].sit<<" "<< ghul[i].freeSit<<endl;			
			cout<<"#################################"<<endl;
			}
	else
		cout<<"Рейсов нет"<<endl;
	}

int Passenger::SavePass(char *file2, class Passenger *vad, int k)
	{
	int i;
	ofstream out;
	out.open(file2, ios::out);
	if (vad!=0)
		for (i=0; i<k; i++)
		out<<vad[i].surname<<" "<<vad[i].name<<" "<<vad[i].secname<<" "<<vad[i].pasport<<" "<<vad[i].numTicket<<" "<<vad[i].numTrip<<endl;
	out.close();
	return 0;
	}

int Voyage::SaveVo(char *file1, class Voyage *ghul, int l)
	{
	int i;
	ofstream out;
	out.open(file1, ios::out);
	if (ghul!=0)
		for (i=0; i<l; i++)
		out<<ghul[i].numVoyage<<" "<<ghul[i].way<<" "<<ghul[i].date<<" "<<ghul[i].sit<<" "<<ghul[i].freeSit<<endl;
	out.close();
	return 0;
	}

void Passenger::findPass (class Passenger *vad, int k)
	{
	int m, d, i, p=0; 
	char s[40], n[40], f[40];  
	float h;
	if (vad!=NULL)
		{
		cin>>m;
		switch (m)
			{
			case 1:
				cout<<"Введите Ф.И.О. пассажира, которого Вы хотите найти:\n"<<"Фамилия: ";
				cin>>s;
				cout<<"Имя: ";
				cin>>n;
				cout<<"Отчество: ";
				cin>>f;
				for (i=0; i<k; i++)
					if (strcmp (vad[i].surname, s) == 0)
						if (strcmp (vad[i].name, n) == 0)
							if (strcmp (vad[i].secname, f) == 0)
								{
									p++;
									cout<<i+1<<") "<<vad[i].surname<<" "<<vad[i].name<<" "<<vad[i].secname<<" "<<vad[i].pasport<<" "<<vad[i].numTicket<<" "<<vad[i].numTrip<<endl;
								}
				if (p==0)
					cout<<"Пассажир не найден"<<endl;
			break;
			case 2:
				cout<<"Введите номер паспорта пассажира, которого Вы хотите найти: "<<endl;
				cin>>d;
				for (i=0; i<k; i++)
					if (vad[i].pasport == d)
						{
						p++;
						cout<<i+1<<") "<<vad[i].surname<<" "<<vad[i].name<<" "<<vad[i].secname<<" "<<vad[i].pasport<<" "<<vad[i].numTicket<<" "<<vad[i].numTrip<<endl;
						}
				if (p==0)
					cout<<"Пассажир не найден"<<endl;
			break;
			case 3:
				cout<<"Введите номер билета, который Вы хотите найти: ";
				cin>>s;
				for (i=0; i<k; i++)
					if (strcmp(vad[i].numTicket, s) == 0)
						{
						p++;
						cout<<i+1<<") "<<vad[i].surname<<" "<<vad[i].name<<" "<<vad[i].secname<<" "<<vad[i].pasport<<" "<<vad[i].numTicket<<" "<<vad[i].numTrip<<endl;
						}
				if (p==0)
					cout<<"Пассажир не найден"<<endl;
			break;
			case 4:
				cout<<"Введите номер рейса, который Вы хотите найти: ";
				cin>>s;
				for (i=0; i<k; i++)
					{
					if (strcmp (vad[i].numTrip, s) == 0)
						{
						p++;
						cout<<i+1<<") "<<vad[i].surname<<" "<<vad[i].name<<" "<<vad[i].secname<<" "<<vad[i].pasport<<" "<<vad[i].numTicket<<" "<<vad[i].numTrip<<endl;
						}
					}
				if (p==0)
					cout<<"Пассажир не найден"<<endl;
			break;
			case 0:
				cout<<"Выход из поиска";
			break;
			default:
				cout<<"Такого пункта в меню нет"<<endl;
			};
		}
	else
		cout<<"Данные не считаны!"<<endl;
	}

void Voyage::findVo (class Voyage *ghul, int l)
	{
	int m, d, i, p=0; 
	char s[40];
	if (ghul!=NULL)
		{
		cin>>m;
		switch (m)
			{
			case 1:
			cout<<"Введите номер рейса, который вы хотите найти: ";
			cin>>s;
			for (i=0; i<l; i++)
				if (strcmp(ghul[i].numVoyage, s) == 0)
					{
					p++;
					cout<<i+1<<") "<<ghul[i].numVoyage<<" "<<ghul[i].way<<" "<<ghul[i].date<<" "<<ghul[i].sit<<" "<< ghul[i].freeSit<<endl;
					}
			if (p==0)
				cout<<"Рейс не найден"<<endl;
			break;
			case 2:
				cout<<"Введите направление рейса, который вы хотите найти: ";
				cin>>s;
				for (i=0; i<l; i++)
					if (strcmp(ghul[i].way, s) == 0)
						{
						p++;
						cout<<i+1<<") "<<ghul[i].numVoyage<<" "<<ghul[i].way<<" "<<ghul[i].date<<" "<<ghul[i].sit<<" "<< ghul[i].freeSit<<endl;
						}
				if (p==0)
					cout<<"Рейс не найден"<<endl;
			break;
			case 3:
				cout<<"Введите дату вылета рейса, который вы хотите найти: ";
				cin>>s;
				for (i=0; i<l; i++)
					if (strcmp(ghul[i].date, s) == 0)
						{
						p++;
						cout<<i+1<<") "<<ghul[i].numVoyage<<" "<<ghul[i].way<<" "<<ghul[i].date<<" "<<ghul[i].sit<<" "<< ghul[i].freeSit<<endl;
						}
				if (p==0)
					cout<<"Рейс не найден"<<endl;
			break;
			case 4:
				cout<<"Введите количество мест на рейсе, который вы хотите найти: ";
				cin>>d;
				for (i=0; i<l; i++)
					if (ghul[i].sit == d)
						{
						p++;
						cout<<i+1<<") "<<ghul[i].numVoyage<<" "<<ghul[i].way<<" "<<ghul[i].date<<" "<<ghul[i].sit<<" "<< ghul[i].freeSit<<endl;
						}
				if (p==0)
					cout<<"Рейс не найден"<<endl;
			break;
			case 5:
				cout<<"Введите количество мест на рейсе, который вы хотите найти: ";
				cin>>d;
				for (i=0; i<l; i++)
					if (ghul[i].freeSit == d)
						{
						p++;
						cout<<i+1<<") "<<ghul[i].numVoyage<<" "<<ghul[i].way<<" "<<ghul[i].date<<" "<<ghul[i].sit<<" "<< ghul[i].freeSit<<endl;
						}
				if (p==0)
					cout<<"Рейс не найден"<<endl;
			break;
			default:
				cout<<"Такого пункта в меню нет"<<endl;
			};
		}
	else
		cout<<"Данные не считаны!"<<endl; 
	}

void Passenger::DelPass(char *file1, char *file2, class Passenger *vad, class Voyage *ghul, int k, int l)
	{
	int del, i, m, h, p=0;
	ifstream in;
	in.open(file1, ios::in);
	if (!in)
		{
		cout<<"Невозможно открыть файл"<<endl;
		return;
		}
	in.close();
	cout<<"Удаление пассажира:\n\nВведите номер пассажира, которого Вы хотите удалить: ";
	cin>>del;
		if(del<=k&&del>0)
			{
			for (i=del; i<k; i++)    
				vad[i-1]=vad[i];	
			for (m=0; m<l; m++)
				if (strcmp(vad[del-1].numTrip, ghul[m].numVoyage) == 0)
					{
					h=ghul[m].freeSit;
					h=h+1;
					ghul[m].freeSit=h;
					SaveVo (file1, ghul, l);
					} 
			cout<<h<<endl;
			k=k-1;
			cout<<"Пассажир №"<<del<<" успешно удален"<<endl;
			SavePass (file2, vad, k);
			}
		else
			{
			cout<<"Такого пассажира не существует"<<endl;
			return;
			}
	}

void Voyage::DelVo(char *file1, char *file2, class Voyage *ghul, class Passenger *vad, int l, int k)
	{
	char s[100];
	int del, i, h, q; 
	ifstream fin;
	fin.open(file2, ios::in);
	if (!fin)
		{
		cout<<"Невозможно открыть файл"<<endl;
		return;
		}
	fin.close();
	cout<<"Удаление рейса:\n\nВведите номер строки рейса, который Вы хотите удалить: ";
	cin>>del;
	for(h=0; h<k; h++)
		if (strcmp(vad[h].numTrip, ghul[del-1].numVoyage) == 0)
			{
			cout<<"Сначала удалите всех пассажиров рейса"<<endl;
			return;
			}
	if (ghul!=NULL)
		if (del<=l&&del>0)	
			{
			for (i=del; i<l; i++)
				ghul[i-1]=ghul[i];
			l=l-1;
			cout<<"Рейс №"<<del<<"успешно удален";
			SaveVo (file1, ghul, l);
			}
		else
			{
			cout<<"Такого рейса не существует";
			}
	return;	
	}
